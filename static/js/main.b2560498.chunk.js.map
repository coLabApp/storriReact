{"version":3,"sources":["Header.js","Card.js","StoryBoard.js","QuestionBoard.js","App.js","index.js"],"names":["Header","className","Card","value","index","useState","subject","content","currentValues","setCurrentValues","handleInput","e","target","name","useEffect","draggableId","id","provided","ref","innerRef","draggableProps","dragHandleProps","type","onChange","rows","cols","StoryBoard","props","toggle","setToggle","toggle1","setToggle1","toggle2","setToggle2","toggle3","setToggle3","toggle4","setToggle4","droppable","droppable2","droppable3","droppable4","droppable5","storyBoardsCards","setStoryBoardsCards","setUserData","length","userInput","console","log","data","Array","from","v","k","map","onDragEnd","result","source","destination","droppableId","containerID","list","startIndex","endIndex","splice","removed","reorder","currentBoard","droppableSource","droppableDestination","sourceClone","destClone","move","finalBoards","onClick","style","display","placeholder","QuestionBoard","currentQuestionId","setQuestion","setUserInput","progressPercentage","setWidth","toggleState","setToggleState","showContainer","setShowContainer","response","setResponse","currentQuestion","question","currentValue","setCurrentValue","width","newVar","nextId","newStyle","show","App","setShow","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2560498.chunk.js","sourcesContent":["import './App.css';\r\n\r\nfunction Header() {\r\n  return (\r\n    <div>\r\n      <header>\r\n        <div className=\"wrapper\">\r\n            <div className=\"headerContainer\">\r\n                    <div className=\"logo\">\r\n                        <h1>Storri</h1>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","import \"./App.css\";\r\nimport { useState, useEffect, useRef, Fragment } from \"react\";\r\n// import Main from './Main'\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n\r\nconst Card = ({ value, index }) => {\r\n  const [currentValues, setCurrentValues] = useState({\r\n    subject: value.content[2],\r\n    content: value.content[0]\r\n  });\r\n\r\n  const handleInput = e => {\r\n    setCurrentValues({ ...currentValues, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <Draggable key={value.id} draggableId={value.id} index={index}>\r\n      {provided => (\r\n        <div\r\n          className=\"cards\"\r\n          // draggable=\"true\"\r\n          key={value.id}\r\n          ref={provided.innerRef}\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n        >\r\n          <h4>{value.content[1]}</h4>\r\n          <input\r\n            type=\"text\"\r\n            className=\"userAnswerInput\"\r\n            value={currentValues.subject}\r\n            onChange={handleInput}\r\n            name=\"subject\"\r\n          ></input>\r\n          <textarea\r\n            type=\"text\"\r\n            className=\"userAnswerTextarea\"\r\n            name=\"echoText\"\r\n            rows=\"1\"\r\n            cols=\"20\"\r\n            name=\"content\"\r\n            onChange={handleInput}\r\n            value={currentValues.content}\r\n          ></textarea>\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default Card;","import \"./App.css\";\r\nimport { useState, useEffect, useRef, Fragment } from \"react\";\r\n// import Main from './Main'\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport Card from \"./Card\";\r\n\r\nfunction StoryBoard(props) {\r\n  const [currentValue, setCurrentValue] = useState(\"\");\r\n  const [toggle, setToggle] = useState(true);\r\n  const [toggle1, setToggle1] = useState(true);\r\n  const [toggle2, setToggle2] = useState(true);\r\n  const [toggle3, setToggle3] = useState(true);\r\n  const [toggle4, setToggle4] = useState(true);\r\n\r\n  let [storyBoardsCards, setStoryBoardsCards] = useState({\r\n    droppable: [],\r\n    droppable2: [],\r\n    droppable3: [],\r\n    droppable4: [],\r\n    droppable5: []\r\n  });\r\n\r\n  let [userData, setUserData] = useState([]);\r\n  let [userData2, setUserData2] = useState([]);\r\n  let [userData3, setUserData3] = useState([]);\r\n  let [userData4, setUserData4] = useState([]);\r\n\r\n  const displayCards = () => {\r\n    const currenttoggle = !toggle;\r\n    setToggle(currenttoggle);\r\n  };\r\n\r\n  const displayCards1 = () => {\r\n    const currenttoggle = !toggle1;\r\n    setToggle1(currenttoggle);\r\n  };\r\n\r\n  const displayCards2 = () => {\r\n    const currenttoggle = !toggle2;\r\n    setToggle2(currenttoggle);\r\n  };\r\n\r\n  const displayCards3 = () => {\r\n    const currenttoggle = !toggle3;\r\n    setToggle3(currenttoggle);\r\n  };\r\n\r\n  const displayCards4 = () => {\r\n    const currenttoggle = !toggle4;\r\n    setToggle4(currenttoggle);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let length = props.userInput.length;\r\n    // readjust users answers array to work the DnD setup\r\n    console.log(\"UserInput\", props.userInput);\r\n    let data = Array.from({ length }, (v, k) => k).map(k => ({\r\n      id: `${k}`,\r\n      //get content\r\n      content: [\r\n        `${props.userInput[k][0]}`,\r\n        `${props.userInput[k][1]}`,\r\n        `${props.userInput[k][2]}`\r\n      ]\r\n    }));\r\n    console.log(props);\r\n    setUserData(data);\r\n    setStoryBoardsCards({\r\n      droppable: data,\r\n      droppable2: [],\r\n      droppable3: [],\r\n      droppable4: [],\r\n      droppable5: data\r\n\r\n    });\r\n  }, [props]);\r\n\r\n  const reorder = (list, startIndex, endIndex) => {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n\r\n    return result;\r\n  };\r\n\r\n  const move = (source, destination, droppableSource, droppableDestination) => {\r\n    const sourceClone = Array.from(source);\r\n    const destClone = Array.from(destination);\r\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n\r\n    destClone.splice(droppableDestination.index, 0, removed);\r\n\r\n    const result = {};\r\n    result[droppableSource.droppableId] = sourceClone;\r\n    result[droppableDestination.droppableId] = destClone;\r\n\r\n    return result;\r\n  };\r\n  let onDragEnd = result => {\r\n    const { source, destination } = result;\r\n\r\n    // dropped outside the list\r\n    if (!destination) {\r\n      return;\r\n    }\r\n\r\n    //Same Board\r\n    if (source.droppableId === destination.droppableId) {\r\n      let containerID = source.droppableId;\r\n      console.log(storyBoardsCards[containerID]);\r\n      const data = reorder(\r\n        storyBoardsCards[containerID],\r\n        source.index,\r\n        destination.index\r\n      );\r\n      let currentBoard = storyBoardsCards;\r\n      currentBoard[containerID] = data;\r\n      setStoryBoardsCards(currentBoard);\r\n    }\r\n    //Different Board\r\n    else {\r\n      let sourceData = storyBoardsCards[source.droppableId];\r\n      let desData = storyBoardsCards[destination.droppableId];\r\n\r\n      const result = move(sourceData, desData, source, destination);\r\n\r\n\r\n      let finalBoards = storyBoardsCards;\r\n      finalBoards[source.droppableId] = result[source.droppableId];\r\n      finalBoards[destination.droppableId] = result[destination.droppableId];\r\n      setStoryBoardsCards(finalBoards);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"storySection\">\r\n      <main>\r\n        <section>\r\n          <div className=\"sectionContainer\">\r\n            <DragDropContext onDragEnd={onDragEnd}>\r\n              <div className=\"wrapper\">\r\n                <h2>\r\n                  NoteBook\r\n                  <button onClick={displayCards}>\r\n                    <i className=\"fas fa-angle-down\"></i>{\" \"}\r\n                  </button>\r\n                </h2>\r\n\r\n                <div className=\"blue\">\r\n                  <div className=\"wrapper\">\r\n                    <div\r\n                      className=\"saveContainer \"\r\n                      id=\"saveContainer\"\r\n                      style={{ display: toggle ? \"block\" : \"none\" }}\r\n                    >\r\n                        <Droppable droppableId=\"droppable5\">\r\n                    {provided => (\r\n                      <div className=\"userAnswer\" ref={provided.innerRef}>\r\n                        {storyBoardsCards[\"droppable5\"].map((value, index) => {\r\n                          if (value.content[2] !== \"\") {\r\n                            // remove || true to hide empty content\r\n                            return (\r\n                              <Card key={index} value={value} index={index} />\r\n                            );\r\n                          }\r\n                        })}\r\n                        {provided.placeholder}\r\n                      </div>\r\n                    )}\r\n                  </Droppable>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <h2>\r\n                  Blank Cards\r\n                  <button onClick={displayCards1}>\r\n                    <i className=\"fas fa-angle-down\"></i>\r\n                  </button>\r\n                </h2>\r\n                <div\r\n                  className=\"blankCards storyContainer\"\r\n                  style={{ display: toggle1 ? \"block\" : \"none\" }}\r\n                >\r\n                  <Droppable droppableId=\"droppable\">\r\n                    {provided => (\r\n                      <div className=\"  userAnswer\" ref={provided.innerRef}>\r\n                        {storyBoardsCards[\"droppable\"].map((value, index) => {\r\n                          if (value.content[2] === \"\") {\r\n                            // remove || true to hide empty content\r\n                            return (\r\n                              <Card key={index} value={value} index={index} />\r\n                            );\r\n                          }\r\n                        })}\r\n                        {provided.placeholder}\r\n                      </div>\r\n                    )}\r\n                  </Droppable>\r\n                </div>\r\n\r\n                <h2>\r\n                  Beginning\r\n                  <button onClick={displayCards2}>\r\n                    <i className=\"fas fa-angle-down\"></i>\r\n                  </button>\r\n                </h2>\r\n                <div className=\"storyContainer\">\r\n                  <div className=\"  \">\r\n                    <div\r\n                      className=\"blankCards  storyBoard \" //storyContainer\r\n                      style={{ display: toggle2 ? \"block\" : \"none\" }}\r\n                    >\r\n                      <Droppable droppableId=\"droppable2\">\r\n                        {provided => (\r\n                          <div className=\"userAnswer\" ref={provided.innerRef}>\r\n                            {storyBoardsCards[\"droppable2\"].map(\r\n                              (value, index) => {\r\n                                return (\r\n                                  <Card\r\n                                    value={value}\r\n                                    index={index}\r\n                                    key={index}\r\n                                  />\r\n                                );\r\n                              }\r\n                            )}\r\n                            {provided.placeholder}\r\n                          </div>\r\n                        )}\r\n                      </Droppable>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <h2>\r\n                  Middle\r\n                  <button onClick={displayCards3}>\r\n                    <i className=\"fas fa-angle-down\"></i>\r\n                  </button>\r\n                </h2>\r\n                <div className=\"storyContainer\">\r\n                  <div className=\"  \">\r\n                    <div\r\n                      className=\"blankCards  storyBoard \" //storyContainer\r\n                      style={{ display: toggle3 ? \"block\" : \"none\" }}\r\n                    >\r\n                      <Droppable droppableId=\"droppable3\">\r\n                        {provided => (\r\n                          <div className=\"userAnswer\" ref={provided.innerRef}>\r\n                            {storyBoardsCards[\"droppable3\"].map(\r\n                              (value, index) => {\r\n                                return (\r\n                                  <Card\r\n                                    value={value}\r\n                                    index={index}\r\n                                    key={index}\r\n                                  />\r\n                                );\r\n                              }\r\n                            )}\r\n                            {provided.placeholder}\r\n                          </div>\r\n                        )}\r\n                      </Droppable>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <h2>\r\n                  End\r\n                  <button onClick={displayCards4}>\r\n                    <i className=\"fas fa-angle-down\"></i>\r\n                  </button>\r\n                </h2>\r\n                <div className=\"storyContainer\">\r\n                  <div className=\"  \">\r\n                    <div\r\n                      className=\"blankCards  storyBoard \" //storyContainer\r\n                      style={{ display: toggle4 ? \"block\" : \"none\" }}\r\n                    >\r\n                      <Droppable droppableId=\"droppable4\">\r\n                        {provided => (\r\n                          <div className=\"userAnswer\" ref={provided.innerRef}>\r\n                            {storyBoardsCards[\"droppable4\"].map(\r\n                              (value, index) => {\r\n                                return (\r\n                                  <Card\r\n                                    value={value}\r\n                                    index={index}\r\n                                    key={index}\r\n                                  />\r\n                                );\r\n                              }\r\n                            )}\r\n                            {provided.placeholder}\r\n                          </div>\r\n                        )}\r\n                      </Droppable>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {\"\"}\r\n              </div>\r\n            </DragDropContext>\r\n          </div>\r\n        </section>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StoryBoard;\r\n","import { useState, useEffect, useRef } from \"react\";\r\nimport \"./App.css\";\r\nimport StoryBoard from \"./StoryBoard\";\r\nimport CardTest from \"./test\";\r\n\r\nfunction QuestionBoard() {\r\n  const questions = [\r\n    {\r\n      id: \"0\",\r\n      question: \"Who was there?\"\r\n    },\r\n    {\r\n      id: \"1\",\r\n      question: \"Who was there?\"\r\n    },\r\n    {\r\n      id: \"2\",\r\n      question: \"Where were you?\"\r\n    },\r\n    {\r\n      id: \"3\",\r\n      question: \"Where were you?\"\r\n    },\r\n    {\r\n      id: \"4\",\r\n      question: \"When did it happen?\"\r\n    },\r\n    {\r\n      id: \"5\",\r\n      question: \"When did it happen?\"\r\n    },\r\n    {\r\n      id: \"6\",\r\n      question: \"What happened?\"\r\n    },\r\n    {\r\n      id: \"7\",\r\n      question: \"What happened?\"\r\n    },\r\n    {\r\n      id: \"8\",\r\n      question: \"Why this story?\"\r\n    },\r\n    {\r\n      id: \"9\",\r\n      question: \"Was there any dialogue?\"\r\n    },\r\n    {\r\n      id: \"10\",\r\n      question: \"What did you see?\"\r\n    },\r\n    {\r\n      id: \"11\",\r\n      question: \"What did you see?\"\r\n    },\r\n    {\r\n      id: \"12\",\r\n      question: \"What did you hear?\"\r\n    },\r\n    {\r\n      id: \"13\",\r\n      question: \"What did you hear?\"\r\n    },\r\n    {\r\n      id: \"14\",\r\n      question: \"What did you feel?\"\r\n    },\r\n    {\r\n      id: \"15\",\r\n      question: \"What did you feel?\"\r\n    },\r\n    {\r\n      id: \"16\",\r\n      question: \"What did you smell?\"\r\n    },\r\n    {\r\n      id: \"17\",\r\n      question: \"What did you smell?\"\r\n    }\r\n  ];\r\n\r\n  const [currentQuestionId, setQuestion] = useState(0);\r\n  const [userInput, setUserInput] = useState([]);\r\n  const [progressPercentage, setWidth] = useState(0);\r\n  const [toggleState, setToggleState] = useState(\"\");\r\n  const [showContainer, setShowContainer] = useState(\"\");\r\n\r\n  const [response, setResponse] = useState(\"\");\r\n\r\n  const currentQuestion = questions[currentQuestionId];\r\n\r\n  const [currentValue, setCurrentValue] = useState(\"\");\r\n\r\n  const nextQuestion = () => {\r\n    const newVar = [currentValue, currentQuestion.question, response];\r\n    setUserInput([...userInput, newVar]);\r\n    setCurrentValue(\"\");\r\n    setResponse(\"\");\r\n\r\n    const nextId = currentQuestionId + 1;\r\n    const newStyle = progressPercentage + 5;\r\n    const display = toggleState + \"none\";\r\n    const show = showContainer + \"grid\";\r\n\r\n    //HERE!\r\n    if (nextId > 16) {\r\n      setToggleState(display);\r\n      setShowContainer(show);\r\n    }\r\n    setQuestion(nextId);\r\n    setWidth(newStyle);\r\n  };\r\n\r\n  const handleInput = e => {\r\n    setCurrentValue(e.target.value);\r\n  };\r\n\r\n  const handleText = e => {\r\n    setResponse(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"wrapper\">\r\n        <div className=\"container\" style={{ display: toggleState }}>\r\n          <div className=\"questionBoard active\">\r\n            <div className=\"questionContainer\">\r\n              <h3>{currentQuestion.question}</h3>\r\n              <div className=\"inputContainer\">\r\n                <input\r\n                  className=\"questionTitle\"\r\n                  type=\"text\"\r\n                  onChange={handleText}\r\n                  value={response}\r\n                ></input>\r\n                <p>Give the card a memorable title</p>\r\n              </div>\r\n              <div className=\"textareaContainer\">\r\n                <h3>Notes</h3>\r\n                <textarea\r\n                  className=\"questionText\"\r\n                  id=\"questionText\"\r\n                  onChange={handleInput}\r\n                  value={currentValue}\r\n                ></textarea>\r\n                <p>or continue without answering</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"btnsContainer\">\r\n              <div className=\"barContainer\">\r\n                <div\r\n                  className=\"bar\"\r\n                  style={{ width: progressPercentage + \"%\" }}\r\n                />\r\n              </div>\r\n              <div className=\"btnContainer \" onClick={nextQuestion}>\r\n                <button className=\"nextBtn\">Continue</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <section className=\"storyBoardSection\" style={{ display: showContainer }}>\r\n        <StoryBoard userInput={userInput} />\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuestionBoard;","import \"./App.css\";\nimport Header from \"./Header\";\nimport { useState, useEffect, useRef } from \"react\";\n// import Main from './Main'\nimport QuestionBoard from \"./QuestionBoard\";\n\nfunction App() {\n  const [show, setShow] = useState(false);\n  const [display, setDisplay] = useState(\"\");\n\n  const newStory = () => {\n    // const changeDisplay = display + \"none\";\n    setShow(!show);\n    // if(!show){\n    //   setDisplay(changeDisplay)\n    // }\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n      {show ? <QuestionBoard /> : null}\n      <button\n        className=\"newBtn\"\n        style={{ display: display }}\n        onClick={newStory}\n      >\n        {\" \"}\n        + Add an idea\n      </button>\n\n \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}