{"version":3,"sources":["Header.js","StoryBoard.js","QuestionBoard.js","App.js","index.js"],"names":["Header","className","StoryBoard","props","useState","setCurrentValue","handleInput","e","target","value","id","userInput","map","uservalue","type","name","rows","cols","onChange","QuestionBoard","currentQuestionId","setQuestion","setUserInput","progressPercentage","setWidth","toggleState","setToggleState","showContainer","setShowContainer","currentQuestion","question","currentValue","style","display","placeholder","width","onClick","newVar","nextId","newStyle","show","App","setShow","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1bc3b76d.chunk.js","sourcesContent":["import './App.css';\r\n\r\nfunction Header() {\r\n  return (\r\n    <div>\r\n      <header>\r\n        <div className=\"wrapper\">\r\n            <div className=\"headerContainer\">\r\n                    <div className=\"logo\">\r\n                        <h1>Storri</h1>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","import './App.css';\r\nimport { useState, useEffect, useRef, Fragment } from 'react';\r\n// import Main from './Main'\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\n\r\nfunction StoryBoard(props) {\r\n\r\n  const [currentValue, setCurrentValue] = useState(\"\");\r\n\r\n\r\n  \r\n  const handleInput = (e) =>{\r\n    setCurrentValue(e.target.value)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"storySection\">\r\n      <main>\r\n        <section>\r\n          <div className=\"sectionContainer\">\r\n              <div className=\"wrapper\">\r\n              <div className=\"blue\">\r\n                    <div className=\"wrapper\">\r\n                        <h2>Writer's Room</h2>\r\n                        <div className=\"saveContainer \"id=\"saveContainer\">\r\n                            <div className=\"userAnswer\">{props.userInput.map((uservalue) =>{\r\n                              if(uservalue[0] !== \"\"){\r\n                                return (\r\n                                <div className=\"cards\"key={uservalue.id}>\r\n                                <input type=\"text\" className=\"userAnswerInput\" value={uservalue[1]}></input>\r\n                                <textarea type=\"text\" name=\"echoText\" rows=\"1\" cols=\"20\" onChange={handleInput} className=\"userAnswerTextarea\" value={uservalue[0]}></textarea>  \r\n                                </div>\r\n                                )\r\n                              }  \r\n                            })}\r\n                          </div>                      \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"storyContainer\">\r\n                  <div className=\"wrapper\">\r\n                    <h2>Blank Cards</h2>\r\n                      <div className=\"blankCards\">\r\n                        <div className =\"userAnswer\">\r\n                          {props.userInput.map((uservalue) =>{\r\n                            if(uservalue[0] === \"\"){\r\n                              return(\r\n                                <div className=\"cards\"key={uservalue.id}>\r\n                                <input type=\"text\" className=\"userAnswerInput\" value={uservalue[1]}></input>\r\n                                <textarea type=\"text\" className=\"userAnswerTextarea\" name=\"echoText\" rows=\"1\" cols=\"20\" onChange={handleInput}> </textarea>  \r\n                                </div>\r\n                              )\r\n                            }\r\n                          })}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"storyContainer\">\r\n              <div className=\"wrapper\">\r\n                  <h2>Beginning</h2>\r\n                  <div className=\"storyBoard\">\r\n                  </div>\r\n              </div>\r\n            </div>\r\n          \r\n            <div className=\"storyContainer\">\r\n                <div className=\"wrapper\">\r\n                    <h2>Middle</h2>\r\n                    <div className=\"storyBoard\">                             \r\n                    </div>\r\n                </div>\r\n            </div>\r\n          \r\n                  <div className=\"storyContainer\">\r\n                      <div className=\"wrapper\">\r\n                          <h2>End</h2>\r\n                          <div className=\"storyBoard\">\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n            \r\n        </section>   \r\n      </main>\r\n    </div>\r\n   \r\n  );\r\n}\r\n\r\nexport default StoryBoard;\r\n","import { useState, useEffect, useRef } from 'react';\r\nimport './App.css';\r\nimport StoryBoard from './StoryBoard';\r\n\r\nfunction QuestionBoard() {\r\n\r\n    const questions = [{\r\n        id:0,\r\n        question:\"Who was there / were you with anyone?\",\r\n    \r\n    },\r\n    {\r\n        id:1,\r\n        question:\"Where were you / Where did this take place?\",\r\n\r\n    \r\n    },\r\n    {\r\n        id:2,\r\n        question:\"What happened?\",\r\n\r\n    \r\n    },\r\n    {\r\n        id:3,\r\n        question:\"What could you see? What could you hear? What could you feel? What could you smell?\",\r\n\r\n    \r\n    },\r\n    {\r\n        id:4,\r\n        question:\"Think about how you could bring the characters in your story to life?\",\r\n\r\n    \r\n    }, {\r\n        id:5,\r\n        question:\"Do you have photo or video of any aspect or characters in this story?\",\r\n\r\n    \r\n    },\r\n    {\r\n        id:6,\r\n        question:\"What do you this this story could represent or symbolize?\",\r\n\r\n    \r\n    },\r\n    {\r\n        id:7,\r\n        question:\"What is the point of this story? [Think: /*The reason I'm telling you this is because _____*/] \",\r\n \r\n    },\r\n    {\r\n        id:8,\r\n        question:\"blank\",\r\n    }\r\n    // {\r\n    //     id:9,\r\n    //     question:\"blank\",\r\n    //     textarea:document.getElementById('questionText').value\r\n    // },\r\n    ]\r\n\r\n    const [currentQuestionId, setQuestion] = useState(0);\r\n    const [userInput, setUserInput] = useState([]);\r\n    const [progressPercentage, setWidth] = useState(0)\r\n    const [toggleState, setToggleState] = useState(\"\");\r\n    const [showContainer, setShowContainer] = useState(\"\")\r\n\r\n    const [response, setResponse] = useState([]);\r\n\r\n    const currentQuestion = questions[currentQuestionId];\r\n    \r\n    const [currentValue, setCurrentValue] = useState(\"\")\r\n\r\n    const nextQuestion = () =>{\r\n        const newVar = ([currentValue, currentQuestion.question]);\r\n        setUserInput([...userInput, newVar]);\r\n        setCurrentValue('')\r\n\r\n        const nextId = currentQuestionId + 1;\r\n        const newStyle = progressPercentage + 14;\r\n        const display = toggleState + \"none\"\r\n        const show = showContainer + \"grid\"\r\n\r\n       \r\n        if (nextId > 7){\r\n            setToggleState(display)\r\n            setShowContainer(show)\r\n        }\r\n        setQuestion(nextId)\r\n        setWidth(newStyle)\r\n    }\r\n\r\n    const handleInput = (e) =>{\r\n         setCurrentValue(e.target.value)\r\n    }\r\n\r\n\r\n\r\n    \r\n  return (\r\n    <div>\r\n        <div className=\"wrapper\">\r\n            <div className=\"container\" style={{display: toggleState}}>\r\n                <div className=\"questionBoard active\"  >\r\n                    <div className=\"questionContainer\" >\r\n                        <div className=\"inputContainer\">\r\n                            <input className=\"questionTitle\" type=\"text\"  onChange={handleInput} placeholder={currentQuestion.question}></input>\r\n                        </div>\r\n                        <div className=\"textareaContainer\">\r\n                            <h3>Notes</h3>\r\n                            <textarea className=\"questionText\" id=\"questionText\" onChange={handleInput} value={currentValue} placeholder=\"Describe the place\" ></textarea>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"btnsContainer\">\r\n                    <div className=\"barContainer\" >\r\n                        <div className=\"bar\" style={{ width: progressPercentage + \"%\" }} />\r\n                    </div>\r\n                    <div className=\"btnContainer \" onClick={nextQuestion}>\r\n                        <button className=\"nextBtn\">Continue</button>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <section className=\"storyBoardSection\" style={{display: showContainer}}>\r\n        <StoryBoard  userInput={userInput}/>\r\n        </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QuestionBoard;","import './App.css';\nimport Header from './Header';\nimport { useState, useEffect, useRef } from 'react';\n// import Main from './Main'\nimport QuestionBoard from './QuestionBoard'\n\nfunction App() {\n\n  const [show, setShow] = useState(false)\n  const [display, setDisplay] = useState('')\n\n  const newStory = () =>{\n    // const changeDisplay = display + \"none\";\n    setShow(!show)\n    // if(!show){\n    //   setDisplay(changeDisplay)\n    // }\n\n  }\n\n  return (\n    <div className=\"App\">\n      <Header />\n      {\n        show?<QuestionBoard />:null\n      }\n      <button className=\"newBtn\" style={{display: display}} onClick={newStory}> + Add an idea</button>\n\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}