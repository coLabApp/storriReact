{"version":3,"sources":["Header.js","StoryBoard.js","QuestionBoard.js","App.js","index.js"],"names":["Header","className","StoryBoard","props","useState","setCurrentValue","toggle","setToggle","toggle1","setToggle1","toggle2","setToggle2","toggle3","setToggle3","toggle4","setToggle4","updateDragging","handleInput","e","target","value","useEffect","onClick","class","id","style","display","userInput","map","uservalue","draggable","type","name","rows","cols","onChange","QuestionBoard","currentQuestionId","setQuestion","setUserInput","progressPercentage","setWidth","toggleState","setToggleState","showContainer","setShowContainer","response","setResponse","currentQuestion","question","currentValue","width","newVar","nextId","newStyle","show","App","setShow","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b253f91a.chunk.js","sourcesContent":["import './App.css';\r\n\r\nfunction Header() {\r\n  return (\r\n    <div>\r\n      <header>\r\n        <div className=\"wrapper\">\r\n            <div className=\"headerContainer\">\r\n                    <div className=\"logo\">\r\n                        <h1>Storri</h1>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","import './App.css';\r\nimport { useState, useEffect, useRef, Fragment } from 'react';\r\n// import Main from './Main'\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\n\r\nfunction StoryBoard(props) {\r\n\r\nconst [currentValue, setCurrentValue] = useState(\"\");\r\nconst [toggle, setToggle] = useState(true);\r\nconst [toggle1, setToggle1] = useState(true);\r\nconst [toggle2, setToggle2] = useState(true);\r\nconst [toggle3, setToggle3] = useState(true);\r\nconst [toggle4, setToggle4] = useState(true);\r\nconst [toggle5, setToggle5] = useState(true);\r\nconst [response, setResponse] = useState(\"\"); \r\nconst [dragging, updateDragging] = useState(props)\r\n\r\nconst displayCards =  () =>{\r\n  const currenttoggle = !toggle\r\n    setToggle(currenttoggle)\r\n  \r\n}\r\n\r\nconst displayCards1 =  () =>{\r\n  const currenttoggle = !toggle1\r\n    setToggle1(currenttoggle)\r\n  \r\n}\r\n\r\nconst displayCards2 =  () =>{\r\n  const currenttoggle = !toggle2\r\n    setToggle2(currenttoggle)\r\n  \r\n}\r\n\r\nconst displayCards3 =  () =>{\r\n  const currenttoggle = !toggle3\r\n    setToggle3(currenttoggle)\r\n  \r\n}\r\n\r\nconst displayCards4 =  () =>{\r\n  const currenttoggle = !toggle4\r\n    setToggle4(currenttoggle)\r\n  \r\n}\r\n\r\nconst displayCards5 =  () =>{\r\n  const currenttoggle = !toggle5\r\n    setToggle5(currenttoggle)\r\n  \r\n}\r\n  \r\nconst handleInput = (e) =>{\r\n    setCurrentValue(e.target.value)\r\n}\r\n\r\nuseEffect(() => {\r\n  updateDragging(props);\r\n}, [props]);\r\n\r\n\r\nfunction handleOnDragEnd(result) {\r\n  if (!result.destination) return;\r\n\r\n  const items = Array.from(props.userInput);\r\n  const [reorderedItem] = items.splice(result.source.index, 1);\r\n  items.splice(result.destination.index, 0, reorderedItem);\r\n\r\n  updateDragging(items);\r\n}\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"storySection\">\r\n      <main>\r\n        <section>\r\n          <div className=\"sectionContainer\">\r\n            \r\n              <div className=\"wrapper\">\r\n              <h2>NoteBook<button onClick={displayCards1}>  <i class=\"fas fa-angle-down\"></i> </button></h2>\r\n              <div className=\"blue\" >\r\n                    <div className=\"wrapper\">\r\n                        <div className=\"saveContainer \"id=\"saveContainer\" style={{display: toggle1 ? 'block' : 'none' }}>\r\n                            <div className=\"userAnswer\">{props.userInput.map((uservalue) =>{\r\n                              if(uservalue[0] !== \"\"){\r\n                                return (\r\n                                <div className=\"cards\" draggable=\"true\"  key={uservalue.id}>\r\n                                <h4>{uservalue[1]}</h4>\r\n                                <input type=\"text\" className=\"userAnswerInput\" value={uservalue[2]}></input>\r\n                                <textarea type=\"text\" name=\"echoText\" rows=\"1\" cols=\"20\" onChange={handleInput} className=\"userAnswerTextarea\" value={uservalue[0]}></textarea>  \r\n                                </div>\r\n                                )\r\n                              }  \r\n                            })}\r\n                          </div>                      \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <h2>Blank Cards <button onClick={displayCards} > <i class=\"fas fa-angle-down\"></i></button></h2>\r\n                <div className=\"storyContainer\">\r\n                  <div className=\"wrapper\">\r\n                      <div className=\"blankCards\" style={{display: toggle ? 'block' : 'none' }}>\r\n                        <div className =\"userAnswer\">\r\n                          {props.userInput.map((uservalue) =>{\r\n                            if(uservalue[0] === \"\"){\r\n                              return(\r\n                                <div className=\"cards\" draggable=\"true\" key={uservalue.id}>\r\n                                <h4>{uservalue[1]}</h4>\r\n                                <input type=\"text\" className=\"userAnswerInput\" ></input>\r\n                                <textarea type=\"text\" className=\"userAnswerTextarea\" name=\"echoText\" rows=\"1\" cols=\"20\" onChange={handleInput}> </textarea>  \r\n                                </div>\r\n                              )\r\n                            }\r\n                          })}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <h2>Beginning <button onClick={displayCards2}  > <i class=\"fas fa-angle-down\"></i> </button></h2>\r\n                <div className=\"storyContainer\" style={{display: toggle2 ? 'block' : 'none' }}> \r\n              <div className=\"wrapper\">\r\n\r\n                  <div className=\"storyBoard\">\r\n                  </div>\r\n              </div>\r\n            </div>\r\n            <h2>Middle <button onClick={displayCards3} > <i class=\"fas fa-angle-down\"></i> </button></h2>\r\n            <div className=\"storyContainer\" style={{display: toggle3 ? 'block' : 'none' }}> \r\n                <div className=\"wrapper\">\r\n                    <div className=\"storyBoard\">                             \r\n                    </div>\r\n                </div>\r\n            </div>\r\n                <h2>End <button onClick={displayCards4} > <i class=\"fas fa-angle-down\"></i> </button></h2>\r\n                  <div className=\"storyContainer\" style={{display: toggle4 ? 'block' : 'none' }}>\r\n                      <div className=\"wrapper\">\r\n                          <div className=\"storyBoard\">\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n            \r\n        </section>   \r\n      </main>\r\n    </div>\r\n   \r\n  );\r\n}\r\n\r\nexport default StoryBoard;\r\n","import { useState, useEffect, useRef } from 'react';\r\nimport './App.css';\r\nimport StoryBoard from './StoryBoard';\r\n\r\nfunction QuestionBoard() {\r\n\r\n    const questions = [{\r\n        id:0,\r\n        question:\"Who was there?\",\r\n    \r\n    },\r\n    {\r\n        id:1,\r\n        question:\"Who was there?\",\r\n    \r\n    },\r\n    {\r\n        id:2,\r\n        question:\"Where were you?\",\r\n\r\n    \r\n    },\r\n    {\r\n        id:3,\r\n        question:\"Where were you?\",\r\n\r\n    \r\n    },\r\n    {\r\n        id:4,\r\n        question:\"When did it happen?\",\r\n\r\n    \r\n    },\r\n    {\r\n        id:4,\r\n        question:\"When did it happen?\",\r\n\r\n    \r\n    },\r\n    {\r\n        id:5,\r\n        question:\"What happened?\",\r\n\r\n    \r\n    },\r\n    {\r\n        id:6,\r\n        question:\"What happened?\",\r\n\r\n    \r\n    },\r\n    {\r\n        id:7,\r\n        question:\"Why this story?\",\r\n\r\n    \r\n    }, {\r\n        id:8,\r\n        question:\"Was there any dialogue?\",\r\n\r\n    \r\n    },\r\n    {\r\n        id:9,\r\n        question:\"What did you see?\",\r\n\r\n    \r\n    },\r\n    {\r\n        id:10,\r\n        question:\"What did you see?\",\r\n\r\n    \r\n    },\r\n    {\r\n        id:11,\r\n        question:\"What did you hear?\",\r\n \r\n    },\r\n    {\r\n        id:12,\r\n        question:\"What did you hear?\",\r\n \r\n    },\r\n    {\r\n        id:13,\r\n        question:\"What did you feel?\",\r\n    },\r\n    {\r\n        id:14,\r\n        question:\"What did you feel?\",\r\n    },\r\n    {\r\n        id:15,\r\n        question:\"What did you smell?\",\r\n    },\r\n    {\r\n        id:16,\r\n        question:\"What did you smell?\",\r\n    }\r\n    ]\r\n\r\n    const [currentQuestionId, setQuestion] = useState(0);\r\n    const [userInput, setUserInput] = useState([]);\r\n    const [progressPercentage, setWidth] = useState(0)\r\n    const [toggleState, setToggleState] = useState(\"\");\r\n    const [showContainer, setShowContainer] = useState(\"\")\r\n\r\n    const [response, setResponse] = useState(\"\");\r\n\r\n    const currentQuestion = questions[currentQuestionId];\r\n    \r\n    const [currentValue, setCurrentValue] = useState(\"\")\r\n\r\n    const nextQuestion = () =>{\r\n        const newVar = ([currentValue, currentQuestion.question, response]);\r\n        setUserInput([...userInput, newVar]);\r\n        setCurrentValue('');\r\n        setResponse('')\r\n\r\n        const nextId = currentQuestionId + 1;\r\n        const newStyle = progressPercentage + 5;\r\n        const display = toggleState + \"none\"\r\n        const show = showContainer + \"grid\"\r\n\r\n       \r\n        if (nextId > 16){\r\n            setToggleState(display)\r\n            setShowContainer(show)\r\n        }\r\n        setQuestion(nextId)\r\n        setWidth(newStyle)\r\n    }\r\n\r\n    const handleInput = (e) =>{\r\n         setCurrentValue(e.target.value)\r\n    }\r\n\r\n    const handleText =(e) =>{\r\n        setResponse(e.target.value)\r\n    }\r\n\r\n\r\n\r\n\r\n      \r\n\r\n\r\n\r\n    \r\n  return (\r\n    <div>\r\n        <div className=\"wrapper\">\r\n            <div className=\"container\" style={{display: toggleState}}>\r\n                <div className=\"questionBoard active\"  >\r\n                    <div className=\"questionContainer\" >\r\n                        <h3>{currentQuestion.question}</h3>\r\n                        <div className=\"inputContainer\">\r\n                            <input className=\"questionTitle\" type=\"text\"  onChange={handleText} value={response}></input>\r\n                            <p>Give the card a memorable title</p>\r\n                        </div>\r\n                        <div className=\"textareaContainer\">\r\n                            <h3>Notes</h3>\r\n                            <textarea className=\"questionText\" id=\"questionText\" onChange={handleInput} value={currentValue}></textarea>\r\n                            <p>or continue without answering</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"btnsContainer\">\r\n                    <div className=\"barContainer\" >\r\n                        <div className=\"bar\" style={{ width: progressPercentage + \"%\" }} />\r\n                    </div>\r\n                    <div className=\"btnContainer \" onClick={nextQuestion}>\r\n                        <button className=\"nextBtn\">Continue</button>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <section className=\"storyBoardSection\" style={{display: showContainer}}>\r\n        <StoryBoard  userInput={userInput}/>\r\n        </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QuestionBoard;","import './App.css';\nimport Header from './Header';\nimport { useState, useEffect, useRef } from 'react';\n// import Main from './Main'\nimport QuestionBoard from './QuestionBoard'\n\nfunction App() {\n\n  const [show, setShow] = useState(false)\n  const [display, setDisplay] = useState('')\n\n  const newStory = () =>{\n    // const changeDisplay = display + \"none\";\n    setShow(!show)\n    // if(!show){\n    //   setDisplay(changeDisplay)\n    // }\n\n  }\n\n  return (\n    <div className=\"App\">\n      <Header />\n      {\n        show?<QuestionBoard />:null\n      }\n      <button className=\"newBtn\" style={{display: display}} onClick={newStory}> + Add an idea</button>\n\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}