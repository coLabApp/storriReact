{"version":3,"sources":["Header.js","StoryBoard.js","QuestionBoard.js","App.js","index.js"],"names":["Header","className","StoryBoard","props","useState","setCurrentValue","toggle","setToggle","displayCards","handleInput","e","target","value","onClick","class","style","display","id","userInput","map","uservalue","type","name","rows","cols","onChange","QuestionBoard","currentQuestionId","setQuestion","setUserInput","progressPercentage","setWidth","toggleState","setToggleState","showContainer","setShowContainer","response","setResponse","currentQuestion","question","currentValue","width","newVar","nextId","newStyle","show","App","setShow","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9b107f0.chunk.js","sourcesContent":["import './App.css';\r\n\r\nfunction Header() {\r\n  return (\r\n    <div>\r\n      <header>\r\n        <div className=\"wrapper\">\r\n            <div className=\"headerContainer\">\r\n                    <div className=\"logo\">\r\n                        <h1>Storri</h1>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","import './App.css';\r\nimport { useState, useEffect, useRef, Fragment } from 'react';\r\n// import Main from './Main'\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\n\r\nfunction StoryBoard(props) {\r\n\r\nconst [currentValue, setCurrentValue] = useState(\"\");\r\nconst [toggle, setToggle] = useState(\"\");\r\n\r\nconst displayCards =  () =>{\r\n    const changeToggle = toggle + \"none\";\r\n    setToggle(changeToggle)\r\n  \r\n}\r\n\r\n\r\n  \r\nconst handleInput = (e) =>{\r\n    setCurrentValue(e.target.value)\r\n}\r\n\r\n  return (\r\n    <div className=\"storySection\">\r\n      <main>\r\n        <section>\r\n          <div className=\"sectionContainer\">\r\n              <div className=\"wrapper\">\r\n              <h2>Writer's Room <button onClick={displayCards}> <i class=\"fas fa-angle-down\"></i> </button></h2>\r\n              <div className=\"blue\" style={{display: toggle}}>\r\n                    <div className=\"wrapper\">\r\n                        <div className=\"saveContainer \"id=\"saveContainer\">\r\n                            <div className=\"userAnswer\">{props.userInput.map((uservalue) =>{\r\n                              if(uservalue[0] !== \"\"){\r\n                                return (\r\n                                <div className=\"cards\"key={uservalue.id}>\r\n                                <h4>{uservalue[1]}</h4>\r\n                                <input type=\"text\" className=\"userAnswerInput\" value={uservalue[2]}></input>\r\n                                <textarea type=\"text\" name=\"echoText\" rows=\"1\" cols=\"20\" onChange={handleInput} className=\"userAnswerTextarea\" value={uservalue[0]}></textarea>  \r\n                                </div>\r\n                                )\r\n                              }  \r\n                            })}\r\n                          </div>                      \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <h2>Blank Cards <button onClick={displayCards} > <i class=\"fas fa-angle-down\"></i></button></h2>\r\n                <div className=\"storyContainer\">\r\n                  <div className=\"wrapper\">\r\n                      <div className=\"blankCards\">\r\n                        <div className =\"userAnswer\">\r\n                          {props.userInput.map((uservalue) =>{\r\n                            if(uservalue[0] === \"\"){\r\n                              return(\r\n                                <div className=\"cards\"key={uservalue.id}>\r\n                                <h4>{uservalue[1]}</h4>\r\n                                <input type=\"text\" className=\"userAnswerInput\" ></input>\r\n                                <textarea type=\"text\" className=\"userAnswerTextarea\" name=\"echoText\" rows=\"1\" cols=\"20\" onChange={handleInput}> </textarea>  \r\n                                </div>\r\n                              )\r\n                            }\r\n                          })}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <h2>Beginning <button  onClick={displayCards}> <i class=\"fas fa-angle-down\"></i> </button></h2>\r\n                <div className=\"storyContainer\" >\r\n              <div className=\"wrapper\">\r\n\r\n                  <div className=\"storyBoard\">\r\n                  </div>\r\n              </div>\r\n            </div>\r\n            <h2>Middle <button onClick={displayCards}> <i class=\"fas fa-angle-down\"></i> </button></h2>\r\n            <div className=\"storyContainer\"  >\r\n                <div className=\"wrapper\">\r\n                    <div className=\"storyBoard\">                             \r\n                    </div>\r\n                </div>\r\n            </div>\r\n                <h2>End <button onClick={displayCards}> <i class=\"fas fa-angle-down\"></i> </button></h2>\r\n                  <div className=\"storyContainer\"  >\r\n                      <div className=\"wrapper\">\r\n                          <div className=\"storyBoard\">\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n            \r\n        </section>   \r\n      </main>\r\n    </div>\r\n   \r\n  );\r\n}\r\n\r\nexport default StoryBoard;\r\n","import { useState, useEffect, useRef } from 'react';\r\nimport './App.css';\r\nimport StoryBoard from './StoryBoard';\r\n\r\nfunction QuestionBoard() {\r\n\r\n    const questions = [{\r\n        id:0,\r\n        question:\"Who was there?\",\r\n    \r\n    },\r\n    {\r\n        id:1,\r\n        question:\"Who was there?\",\r\n    \r\n    },\r\n    {\r\n        id:2,\r\n        question:\"Where were you?\",\r\n\r\n    \r\n    },\r\n    {\r\n        id:3,\r\n        question:\"Where were you?\",\r\n\r\n    \r\n    },\r\n    {\r\n        id:4,\r\n        question:\"When did it happen?\",\r\n\r\n    \r\n    },\r\n    {\r\n        id:4,\r\n        question:\"When did it happen?\",\r\n\r\n    \r\n    },\r\n    {\r\n        id:5,\r\n        question:\"What happened?\",\r\n\r\n    \r\n    },\r\n    {\r\n        id:6,\r\n        question:\"What happened?\",\r\n\r\n    \r\n    },\r\n    {\r\n        id:7,\r\n        question:\"Why this story?\",\r\n\r\n    \r\n    }, {\r\n        id:8,\r\n        question:\"Was there any dialogue?\",\r\n\r\n    \r\n    },\r\n    {\r\n        id:9,\r\n        question:\"What did u see?\",\r\n\r\n    \r\n    },\r\n    {\r\n        id:10,\r\n        question:\"What did u see?\",\r\n\r\n    \r\n    },\r\n    {\r\n        id:11,\r\n        question:\"What did u hear?\",\r\n \r\n    },\r\n    {\r\n        id:12,\r\n        question:\"What did u hear?\",\r\n \r\n    },\r\n    {\r\n        id:13,\r\n        question:\"What did u feel?\",\r\n    },\r\n    {\r\n        id:14,\r\n        question:\"What did u feel?\",\r\n    },\r\n    {\r\n        id:15,\r\n        question:\"What did you smell?\",\r\n    },\r\n    {\r\n        id:16,\r\n        question:\"What did you smell?\",\r\n    }\r\n    ]\r\n\r\n    const [currentQuestionId, setQuestion] = useState(0);\r\n    const [userInput, setUserInput] = useState([]);\r\n    const [progressPercentage, setWidth] = useState(0)\r\n    const [toggleState, setToggleState] = useState(\"\");\r\n    const [showContainer, setShowContainer] = useState(\"\")\r\n\r\n    const [response, setResponse] = useState(\"\");\r\n\r\n    const currentQuestion = questions[currentQuestionId];\r\n    \r\n    const [currentValue, setCurrentValue] = useState(\"\")\r\n\r\n    const nextQuestion = () =>{\r\n        const newVar = ([currentValue, currentQuestion.question, response]);\r\n        setUserInput([...userInput, newVar]);\r\n        setCurrentValue('');\r\n        setResponse('')\r\n\r\n        const nextId = currentQuestionId + 1;\r\n        const newStyle = progressPercentage + 8;\r\n        const display = toggleState + \"none\"\r\n        const show = showContainer + \"grid\"\r\n\r\n       \r\n        if (nextId > 16){\r\n            setToggleState(display)\r\n            setShowContainer(show)\r\n        }\r\n        setQuestion(nextId)\r\n        setWidth(newStyle)\r\n    }\r\n\r\n    const handleInput = (e) =>{\r\n         setCurrentValue(e.target.value)\r\n    }\r\n\r\n    const handleText =(e) =>{\r\n        setResponse(e.target.value)\r\n    }\r\n\r\n\r\n\r\n    \r\n  return (\r\n    <div>\r\n        <div className=\"wrapper\">\r\n            <div className=\"container\" style={{display: toggleState}}>\r\n                <div className=\"questionBoard active\"  >\r\n                    <div className=\"questionContainer\" >\r\n                        <h3>{currentQuestion.question}</h3>\r\n                        <div className=\"inputContainer\">\r\n                            <input className=\"questionTitle\" type=\"text\"  onChange={handleText} value={response}></input>\r\n                            <p>Give the card a memorable title</p>\r\n                        </div>\r\n                        <div className=\"textareaContainer\">\r\n                            <h3>Notes</h3>\r\n                            <textarea className=\"questionText\" id=\"questionText\" onChange={handleInput} value={currentValue}></textarea>\r\n                            <p>or continue without answering</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"btnsContainer\">\r\n                    <div className=\"barContainer\" >\r\n                        <div className=\"bar\" style={{ width: progressPercentage + \"%\" }} />\r\n                    </div>\r\n                    <div className=\"btnContainer \" onClick={nextQuestion}>\r\n                        <button className=\"nextBtn\">Continue</button>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <section className=\"storyBoardSection\" style={{display: showContainer}}>\r\n        <StoryBoard  userInput={userInput}/>\r\n        </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QuestionBoard;","import './App.css';\nimport Header from './Header';\nimport { useState, useEffect, useRef } from 'react';\n// import Main from './Main'\nimport QuestionBoard from './QuestionBoard'\n\nfunction App() {\n\n  const [show, setShow] = useState(false)\n  const [display, setDisplay] = useState('')\n\n  const newStory = () =>{\n    // const changeDisplay = display + \"none\";\n    setShow(!show)\n    // if(!show){\n    //   setDisplay(changeDisplay)\n    // }\n\n  }\n\n  return (\n    <div className=\"App\">\n      <Header />\n      {\n        show?<QuestionBoard />:null\n      }\n      <button className=\"newBtn\" style={{display: display}} onClick={newStory}> + Add an idea</button>\n\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}