{"version":3,"sources":["Header.js","QuestionBoard.js","App.js","index.js"],"names":["Header","className","QuestionBoard","questions","id","question","useState","currentQuestionId","setQuestion","userInput","setUserInput","progressPercentage","setWidth","toggleState","setToggleState","showContainer","setShowContainer","response","setResponse","currentQuestion","currentValue","setCurrentValue","handleInput","e","target","value","style","display","type","onChange","placeholder","width","onClick","newVar","nextId","newStyle","show","map","uservalue","i","item","App","setShow","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b28e24c9.chunk.js","sourcesContent":["import './App.css';\r\n\r\nfunction Header() {\r\n  return (\r\n    <div>\r\n      <header>\r\n        <div className=\"wrapper\">\r\n            <div className=\"headerContainer\">\r\n                    <div className=\"logo\">\r\n                        <h1>Storri</h1>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","import { useState, useEffect, useRef } from 'react';\r\nimport './App.css';\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\n\r\nfunction QuestionBoard() {\r\n\r\n    const questions = [{\r\n        id:0,\r\n        question:\"Who was there / were you with anyone?\",\r\n    \r\n    },\r\n    {\r\n        id:1,\r\n        question:\"Where were you / Where did this take place?\",\r\n\r\n    \r\n    },\r\n    {\r\n        id:2,\r\n        question:\"What happened?\",\r\n\r\n    \r\n    },\r\n    {\r\n        id:3,\r\n        question:\"What could you see? What could you hear? What could you feel? What could you smell?\",\r\n\r\n    \r\n    },\r\n    {\r\n        id:4,\r\n        question:\"Think about how you could bring the characters in your story to life?\",\r\n\r\n    \r\n    }, {\r\n        id:5,\r\n        question:\"Do you have photo or video of any aspect or characters in this story?\",\r\n\r\n    \r\n    },\r\n    {\r\n        id:6,\r\n        question:\"What do you this this story could represent or symbolize?\",\r\n\r\n    \r\n    },\r\n    {\r\n        id:7,\r\n        question:\"What is the point of this story? [Think: /*The reason I'm telling you this is because _____*/] \",\r\n \r\n    },\r\n    {\r\n        id:8,\r\n        question:\"blank\",\r\n    }\r\n    // {\r\n    //     id:9,\r\n    //     question:\"blank\",\r\n    //     textarea:document.getElementById('questionText').value\r\n    // },\r\n    ]\r\n\r\n    const [currentQuestionId, setQuestion] = useState(0);\r\n    const [userInput, setUserInput] = useState([]);\r\n    const [progressPercentage, setWidth] = useState(0)\r\n    const [toggleState, setToggleState] = useState(\"\");\r\n    const [showContainer, setShowContainer] = useState(\"\")\r\n\r\n    const [response, setResponse] = useState([]);\r\n\r\n    const currentQuestion = questions[currentQuestionId];\r\n    \r\n    const [currentValue, setCurrentValue] = useState(\"\")\r\n\r\n    const nextQuestion = () =>{\r\n        const newVar = [currentQuestion.question,currentValue];\r\n        setUserInput([...userInput, newVar]);\r\n        setCurrentValue('')\r\n\r\n        // setUserInput([currentQuestion.question.value, currentQuestion.textarea.value])\r\n        const nextId = currentQuestionId + 1;\r\n        const newStyle = progressPercentage + 14;\r\n        const display = toggleState + \"none\"\r\n        const show = showContainer + \"grid\"\r\n        if(userInput[1] !== \"\"){\r\n            setResponse([...response, questions[currentQuestionId]])  \r\n        } \r\n       \r\n        if (nextId > 7){\r\n            setToggleState(display)\r\n            setShowContainer(show)\r\n\r\n        }\r\n\r\n        setQuestion(nextId)\r\n        setWidth(newStyle)\r\n    }\r\n\r\n    const handleInput = (e) =>{\r\n         setCurrentValue(e.target.value)\r\n    }\r\n\r\n\r\n\r\n    // const { handleChange, handleSubmit } = useHandleInput('');\r\n\r\n\r\n\r\n    \r\n  return (\r\n    <div>\r\n        <div className=\"wrapper\">\r\n            <div className=\"container\" style={{display: toggleState}}>\r\n                <div className=\"questionBoard active\"  >\r\n                    <div className=\"questionContainer\" >\r\n                        <div className=\"inputContainer\">\r\n                            <input className=\"questionTitle\" type=\"text\"  onChange={handleInput} placeholder={currentQuestion.question}></input>\r\n                        </div>\r\n                        <div className=\"textareaContainer\">\r\n                            <textarea className=\"questionText\" id=\"questionText\" onChange={handleInput} value={currentValue} ></textarea>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"btnsContainer\">\r\n                    <div className=\"barContainer\" >\r\n                        <div className=\"bar\" style={{ width: progressPercentage + \"%\" }} />\r\n                    </div>\r\n                    <div className=\"btnContainer \" onClick={nextQuestion}>\r\n                        <button className=\"nextBtn\">Continue</button>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n\r\n        </div>\r\n        <div className=\"mainSection\"style={{display: showContainer}}>\r\n        <main>\r\n        <section>\r\n            <div className=\"sectionContainer\">\r\n                <div className=\"storyBoard\">\r\n                    <div className=\"wrapper\">\r\n                        <h2>Writer's Room</h2>\r\n                        <div className=\"saveContainer \"id=\"saveContainer\">\r\n                            <div className=\"userAnswer\">{userInput.map((uservalue, i) =>{ \r\n                                <div key={i}>\r\n                                <div key={uservalue.id}>\r\n                                    <h2>Hello</h2>\r\n                                <input value={uservalue[0]}></input>\r\n                                <textarea value={uservalue[1]}></textarea>  \r\n                                </div>\r\n                                </div>\r\n                            })}\r\n                                </div>                      \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"storyContainer\">\r\n                    <div className=\"wrapper\">\r\n                        <h2>Blank Cards</h2>\r\n                        <div className=\"blankCards\" id=\"blankCards\">\r\n                            <div className=\"userAnswer\">{response.map((item,i) =>{\r\n                                <div className=\"wrapper\" key={i}>\r\n                                <div key={item.id}>\r\n                                    <input type=\"text\" value={item}></input>\r\n                                    <textarea></textarea>\r\n                                </div>\r\n                                </div>\r\n                            })}</div>                           \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        \r\n                <div className=\"storyContainer\">\r\n                    <div className=\"wrapper\">\r\n                        <h2>Beginning</h2>\r\n                        <div className=\"storyBoard\">\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        \r\n                <div className=\"storyContainer\">\r\n                    <div className=\"wrapper\">\r\n                        <h2>Middle</h2>\r\n                        <div className=\"storyBoard\">\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        \r\n                <div className=\"storyContainer\">\r\n                    <div className=\"wrapper\">\r\n                        <h2>End</h2>\r\n                        <div className=\"storyBoard\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>   \r\n        </section>\r\n    </main>\r\n    </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QuestionBoard;","import './App.css';\nimport Header from './Header';\nimport { useState, useEffect, useRef } from 'react';\n// import Main from './Main'\nimport QuestionBoard from './QuestionBoard'\n\nfunction App() {\n\n  const [show, setShow] = useState(false)\n  const [display, setDisplay] = useState('')\n\n  const newStory = () =>{\n    // const changeDisplay = display + \"none\";\n    setShow(!show)\n    // if(!show){\n    //   setDisplay(changeDisplay)\n    // }\n\n  }\n\n  return (\n    <div className=\"App\">\n      <Header />\n      {\n        show?<QuestionBoard />:null\n      }\n      <button className=\"newBtn\" style={{display: display}} onClick={newStory}> + New question</button>\n\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}